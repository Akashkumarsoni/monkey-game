{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Coding\\\\newGmae\\\\src\\\\pages\\\\GamePage.tsx\",\n  _s = $RefreshSig$();\nimport { useNavigate } from \"react-router-dom\";\nimport { Backbtn, GreyBanana, GreyScore, Yesbtn } from \"../assets/svgs/svgs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeRotate, matching, notmatching } from \"../redux-tool/Slice\";\nimport React, { useEffect, useState } from \"react\";\nimport SuggesstionCard from \"../common/SuggesstionCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction GamePage() {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const allcards = useSelector(state => state.memorygame.game);\n  const [clicking, setClicking] = useState(0);\n  const [win, setWin] = useState(\"Loose\");\n  const [show, setShow] = useState(\"\");\n  const flipfunc = e => {\n    setShow(e);\n    if (show.match === e.match) {\n      let data = {\n        s1: show,\n        s2: e\n      };\n      setTimeout(() => {\n        dispatch(matching(data));\n      }, 1000);\n      setShow(\"\");\n    }\n    dispatch(changeRotate(e));\n  };\n  const flipfuncback = e => {\n    setClicking(clicking + 1);\n    let data = {\n      s1: show,\n      s2: e\n    };\n    if (show.match === e.match) {\n      dispatch(changeRotate(e));\n      setTimeout(() => {\n        dispatch(matching(data));\n      }, 1000);\n      setShow(\"\");\n    } else {\n      dispatch(changeRotate(e));\n      setTimeout(() => {\n        dispatch(notmatching(data));\n      }, 1000);\n      setShow(\"\");\n    }\n  };\n  useEffect(() => {\n    const func = () => {\n      let counts = 2;\n      allcards.map(i => {\n        if (i.match === \"match\") {\n          counts = counts + 1;\n        }\n      });\n      if (counts === allcards.length) {\n        setWin(\"Win\");\n      }\n    };\n    func();\n  }, [clicking]);\n  const handleClick = cardValue => {\n    if (show === \"\") {\n      flipfunc(cardValue);\n    } else {\n      flipfuncback(cardValue);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container d-flex-center h-100p\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button back\",\n      onClick: () => navigate(\"/next\"),\n      children: /*#__PURE__*/_jsxDEV(Backbtn, {\n        height: \"146\",\n        width: \"146\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"score-level\",\n      children: [/*#__PURE__*/_jsxDEV(GreyScore, {\n        height: \"37\",\n        width: \"755\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-level-abs\",\n        children: /*#__PURE__*/_jsxDEV(GreyBanana, {\n          height: \"139\",\n          width: \"134\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-container--item\",\n        children: Array(6).fill(0).map((_, ind) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(SuggesstionCard, {\n            color: \"pink\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), allcards.map((value, index) => {\n            if (index <= 7) return; //<PlayCard key={value.id} value={value} handleClick={handleClick} />;\n          })]\n        }, ind, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 47\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cards-container--item\",\n        children: Array(6).fill(0).map((_, ind) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: /*#__PURE__*/_jsxDEV(SuggesstionCard, {\n            color: \"blue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this)\n        }, ind, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 47\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button down\",\n      children: /*#__PURE__*/_jsxDEV(Yesbtn, {\n        height: \"90\",\n        width: \"339\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(GamePage, \"yKqdF3dB8eEVLpCdQxsV/JOZH2I=\", false, function () {\n  return [useNavigate, useDispatch, useSelector];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["useNavigate","Backbtn","GreyBanana","GreyScore","Yesbtn","useDispatch","useSelector","changeRotate","matching","notmatching","React","useEffect","useState","SuggesstionCard","jsxDEV","_jsxDEV","GamePage","_s","navigate","dispatch","allcards","state","memorygame","game","clicking","setClicking","win","setWin","show","setShow","flipfunc","e","match","data","s1","s2","setTimeout","flipfuncback","func","counts","map","i","length","handleClick","cardValue","className","children","onClick","height","width","fileName","_jsxFileName","lineNumber","columnNumber","Array","fill","_","ind","Fragment","color","value","index","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Coding/newGmae/src/pages/GamePage.tsx"],"sourcesContent":["import { useNavigate } from \"react-router-dom\";\nimport { Backbtn, GreyBanana, GreyScore, Yesbtn } from \"../assets/svgs/svgs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { changeRotate, matching, notmatching } from \"../redux-tool/Slice\";\nimport PlayCard from \"../common/PlayCard\";\nimport React, { useEffect, useState } from \"react\";\nimport SuggesstionCard from \"../common/SuggesstionCard\";\nfunction GamePage() {\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const allcards = useSelector((state: any) => state.memorygame.game);\n  const [clicking, setClicking] = useState(0);\n  const [win, setWin] = useState(\"Loose\");\n  const [show, setShow] = useState(\"\");\n  const flipfunc = (e: any) => {\n    setShow(e);\n    if (show.match === e.match) {\n      let data = { s1: show, s2: e };\n      setTimeout(() => {\n        dispatch(matching(data));\n      }, 1000);\n      setShow(\"\");\n    }\n    dispatch(changeRotate(e));\n  };\n  const flipfuncback = (e: any) => {\n    setClicking(clicking + 1);\n    let data = { s1: show, s2: e };\n    if (show.match === e.match) {\n      dispatch(changeRotate(e));\n      setTimeout(() => {\n        dispatch(matching(data));\n      }, 1000);\n      setShow(\"\");\n    } else {\n      dispatch(changeRotate(e));\n      setTimeout(() => {\n        dispatch(notmatching(data));\n      }, 1000);\n      setShow(\"\");\n    }\n  };\n\n  useEffect(() => {\n    const func = () => {\n      let counts = 2;\n      allcards.map((i: any) => {\n        if (i.match === \"match\") {\n          counts = counts + 1;\n        }\n      });\n      if (counts === allcards.length) {\n        setWin(\"Win\");\n      }\n    };\n    func();\n  }, [clicking]);\n  const handleClick = (cardValue: any) => {\n    if (show === \"\") {\n      flipfunc(cardValue);\n    } else {\n      flipfuncback(cardValue);\n    }\n  };\n  return (\n    <div className=\"container d-flex-center h-100p\">\n      <div className=\"button back\" onClick={() => navigate(\"/next\")}>\n        {<Backbtn height=\"146\" width=\"146\" />}\n      </div>\n      <div className=\"score-level\">\n        <GreyScore height=\"37\" width=\"755\" />\n        <div className=\"score-level-abs\">\n          <GreyBanana height=\"139\" width=\"134\" />\n        </div>\n      </div>\n      <div className=\"cards-container\">\n          <div className=\"cards-container--item\">\n            {\n              Array(6).fill(0).map((_,ind) => <React.Fragment key={ind}>\n                <SuggesstionCard color=\"pink\" />\n                {allcards.map((value: any, index: number) => {\n                  if (index <= 7)\n                    return //<PlayCard key={value.id} value={value} handleClick={handleClick} />;\n                })}\n              </React.Fragment>)\n            }\n          </div>\n          <div className=\"cards-container--item\">\n            {\n              Array(6).fill(0).map((_,ind) => <React.Fragment key={ind}>\n                <SuggesstionCard color=\"blue\" />\n              </React.Fragment>)\n            }\n          </div>\n        </div>\n      {/* <div className=\"boxsdiv\">\n        {allcards.map((value: any, index: number) => {\n          if (index <= 7)\n            return <PlayCard key={value.id} value={value} handleClick={handleClick} />;\n        })}\n      </div>\n\n      <div className=\"boxsdiv\">\n        {allcards.map((value: any, index: number) => {\n          if (index > 7)\n            return <PlayCard key={value.id} value={value} handleClick={handleClick} />;\n        })}\n      </div> */}\n      <div className=\"button down\">{<Yesbtn height=\"90\" width=\"339\" />}</div>\n    </div>\n  );\n}\n\nexport default GamePage;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}