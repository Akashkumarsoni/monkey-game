{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\Coding\\\\newGmae\\\\src\\\\pages\\\\WinnerPage.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { MonkeyWithBanana } from '../assets/svgs/svgs';\nimport { useNavigate } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { gameover } from '../redux-tool/Slice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction WinnerPage(props) {\n  _s();\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const handleReplay = () => {\n    navigate('/method');\n    dispatch(gameover(\"\"));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"winner-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"winner-page--card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-page--score\",\n        children: Math.ceil(6 / props.chance) * 10 == Infinity ? 0 : 6 / props.chance * 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"winbanana.png\",\n        alt: \"winner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-page--monkey\",\n        children: [\" \", /*#__PURE__*/_jsxDEV(MonkeyWithBanana, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"winner-page--yah-btn\",\n        onClick: handleReplay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(WinnerPage, \"ZaVe+Vo7W9FMoQ/aTgBrV7UvA04=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n_c = WinnerPage;\nexport default WinnerPage;\nvar _c;\n$RefreshReg$(_c, \"WinnerPage\");","map":{"version":3,"names":["React","MonkeyWithBanana","useNavigate","useDispatch","gameover","jsxDEV","_jsxDEV","WinnerPage","props","_s","navigate","dispatch","handleReplay","className","children","Math","ceil","chance","Infinity","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/Coding/newGmae/src/pages/WinnerPage.tsx"],"sourcesContent":["import React from 'react'\r\nimport { MonkeyWithBanana, WinnerCount } from '../assets/svgs/svgs'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { gameover } from '../redux-tool/Slice';\r\n\r\ninterface Props {\r\n    count:number;\r\n    chance:number;\r\n}\r\n\r\nfunction WinnerPage(props: Props) {\r\n    const navigate = useNavigate();\r\n    const dispatch = useDispatch();\r\n    const handleReplay = () => {\r\n        navigate('/method');\r\n        dispatch(gameover(\"\"))\r\n    }\r\n  return (\r\n    <div className='winner-page'>\r\n        <div className='winner-page--card'>\r\n        <div className='winner-page--score'>{Math.ceil(6/props.chance)*10 == Infinity ? 0:((6/props.chance)*10) }</div>\r\n            <img src='winbanana.png' alt='winner'/>\r\n           <div className='winner-page--monkey'> <MonkeyWithBanana/></div>\r\n            <div className='winner-page--yah-btn' onClick={handleReplay}></div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default WinnerPage"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,gBAAgB,QAAqB,qBAAqB;AACnE,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,QAAQ,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO/C,SAASC,UAAUA,CAACC,KAAY,EAAE;EAAAC,EAAA;EAC9B,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,YAAY,GAAGA,CAAA,KAAM;IACvBF,QAAQ,CAAC,SAAS,CAAC;IACnBC,QAAQ,CAACP,QAAQ,CAAC,EAAE,CAAC,CAAC;EAC1B,CAAC;EACH,oBACEE,OAAA;IAAKO,SAAS,EAAC,aAAa;IAAAC,QAAA,eACxBR,OAAA;MAAKO,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAClCR,OAAA;QAAKO,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAEC,IAAI,CAACC,IAAI,CAAC,CAAC,GAACR,KAAK,CAACS,MAAM,CAAC,GAAC,EAAE,IAAIC,QAAQ,GAAG,CAAC,GAAG,CAAC,GAACV,KAAK,CAACS,MAAM,GAAE;MAAG;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC3GhB,OAAA;QAAKiB,GAAG,EAAC,eAAe;QAACC,GAAG,EAAC;MAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACxChB,OAAA;QAAKO,SAAS,EAAC,qBAAqB;QAAAC,QAAA,GAAC,GAAC,eAAAR,OAAA,CAACL,gBAAgB;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC9DhB,OAAA;QAAKO,SAAS,EAAC,sBAAsB;QAACY,OAAO,EAAEb;MAAa;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV;AAACb,EAAA,CAjBQF,UAAU;EAAA,QACEL,WAAW,EACXC,WAAW;AAAA;AAAAuB,EAAA,GAFvBnB,UAAU;AAmBnB,eAAeA,UAAU;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}